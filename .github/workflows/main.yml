#name: Python CI
#
## Trigger the workflow on any push to the main branch or pull request
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

#jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#      # Step 1: Check out the code from the repository
#      - name: Check out code
#        uses: actions/checkout@v2
#
#      # Step 2: Set up Python environment
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#
#      # Step 3: Install dependencies
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      # Step 4: Run tests
#      - name: Run tests
#        run: pytest


name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build The Docker Image
      run: docker build . --file DockerFile --tag workflow-test:$(date +%s)
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerFile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}
